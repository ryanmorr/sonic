{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/@ryanmorr/css-selector-parser/dist/parse.min.js","src/sonic.js"],"names":["f","exports","module","define","amd","window","global","self","this","sonic","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","parse","s","l","Object","defineProperty","value","default","trim","F","match","m","substring","charAt","replace","g","String","fromCharCode","parseInt","attributes","pseudos","nodeName","push","name","operator","ignoreCase","b","d","toLowerCase","h","w","v","test","create","el","selector","token","tokenize","matches","filter","filters","_cssSelectorParser","doc","document","documentElement","arrayFilter","matchesFn","reduce","fn","combinators"," ","context","results","concat","querySelectorAll",">","parentNode","+","nextElementSibling","~","every","_ref","map","tokens","forEach","_ref2","_ref3","join","find","root","query","arguments","undefined","len","_loop","combinator","nodes","includes","sort","compareDocumentPosition"],"mappings":"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","file":"sonic.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*! @ryanmorr/css-selector-parser v0.1.0 | https://github.com/ryanmorr/css-selector-parser */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).parse=e()}}(function(){return function o(i,s,f){function a(t,e){if(!s[t]){if(!i[t]){var r=\"function\"==typeof require&&require;if(!e&&r)return r(t,!0);if(l)return l(t,!0);var n=new Error(\"Cannot find module '\"+t+\"'\");throw n.code=\"MODULE_NOT_FOUND\",n}var u=s[t]={exports:{}};i[t][0].call(u.exports,function(e){return a(i[t][1][e]||e)},u,u.exports,o,i,s,f)}return s[t].exports}for(var l=\"function\"==typeof require&&require,e=0;e<f.length;e++)a(f[e]);return a}({1:[function(e,t,r){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r.default=function(t){if((t=t.trim())in F)return F[t];var e,r=[],n=[],u=!1;function o(){var e=t.match(m)[0];return i(e.length),a(e)}function i(e){t=t.substring(e)}function s(e){for(;f(t.charAt(e));)e++;i(e)}function f(e){return\" \"===e||\"\\n\"===e||\"\\t\"===e||\"\\f\"===e||\"\\r\"===e}function a(e){return e.replace(g,function(e,t,r){return t?String.fromCharCode(parseInt(t,16)):r})}function l(){e={attributes:[],pseudos:[]}}l();for(;\"\"!==t;){var p=t.charAt(0);if(f(p))u=!0,s(1);else if(\">\"===p||\"<\"===p||\"~\"===p||\"+\"===p)(e.nodeName||0<e.attributes.length||0<e.pseudos.length)&&n.push(e),n.push(p),l(),u=!1,s(1);else if(\",\"===p)n.push(e),r.push(n),l(),u=!(n=[]),s(1);else if(u&&(n.push(e),n.push(\" \"),l(),u=!1),\"*\"===p)i(1),e.nodeName=\"*\";else if(\"#\"===p)i(1),e.attributes.push({name:\"id\",operator:\"=\",value:o(),ignoreCase:!1});else if(\".\"===p)i(1),e.attributes.push({name:\"class\",operator:\"~=\",value:o(),ignoreCase:!1});else if(\"[\"===p){var c=t.match(b);i(c[0].length);var d=a(c[1]).toLowerCase();e.attributes.push({name:d,operator:c[2]||\"\",value:a(c[4]||c[5]||\"\"),ignoreCase:!!c[6]})}else if(\":\"===p){var h=t.match(w);i(h[0].length);var v=a(h[1]).toLowerCase();e.pseudos.push({name:v,value:a(h[3]||\"\")})}else m.test(t)&&(e.nodeName=o().toLowerCase())}return n.push(e),r.push(n),F[t]=r};var F=Object.create(null),m=/^(?:\\\\.|[\\w\\-\\u00c0-\\uFFFF])+/,g=/\\\\(?:([0-9a-f]{1,6} ?)|(.))/gi,w=/:((?:[\\w\\u00c0-\\uFFFF\\-]|\\\\.)+)(?:\\((['\"]?)((?:\\([^\\)]+\\)|[^\\(\\)]*)+)\\2\\))?/,b=/^\\[((?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])+)\\s*(?:(\\S?=)\\s*(?:(['\"])([^]*?)\\3|(#?(?:\\\\.|[\\w\\u00c0-\\uFFFF\\-])*)|)|)\\s*(i)?\\]/;t.exports=r.default},{}]},{},[1])(1)});\n//# sourceMappingURL=parse.min.js.map\n","import parse from '@ryanmorr/css-selector-parser';\r\n\r\nconst doc = window.document;\r\nconst documentElement = doc.documentElement;\r\nconst arrayFilter = [].filter;\r\n\r\nconst matchesFn = [\r\n    'matches',\r\n    'webkitMatchesSelector',\r\n    'msMatchesSelector'\r\n].reduce((fn, name) => {\r\n    if (fn) {\r\n        return fn;\r\n    }\r\n    return name in documentElement ? name : fn;\r\n}, null);\r\n\r\nconst combinators = {\r\n\r\n    ' ': (context, token, results) => {\r\n        return results.concat(arrayFilter.call(context.querySelectorAll(token.selector), (el) => {\r\n            return filter(el, token.filters);\r\n        }));\r\n    },\r\n\r\n    '>': (context, token, results) => {\r\n        return results.concat(arrayFilter.call(context.querySelectorAll(token.selector), (el) => {\r\n            return el.parentNode === context && filter(el, token.filters);\r\n        }));\r\n    },\r\n\r\n    '+': (context, token, results) => {\r\n        const el = context.nextElementSibling;\r\n        if (el && matches(el, token.selector) && filter(el, token.filters)) {\r\n            results.push(el);\r\n        }\r\n        return results;\r\n    },\r\n\r\n    '~': (context, token, results) => {\r\n        let el = context.nextElementSibling;\r\n        while (el) {\r\n            if (matches(el, token.selector) && filter(el, token.filters)) {\r\n                results.push(el);\r\n            }\r\n            el = el.nextElementSibling;\r\n        }\r\n        return results;\r\n    }\r\n};\r\n\r\nexport const pseudos = Object.create(null);\r\n\r\nfunction matches(el, selector) {\r\n    return el[matchesFn](selector);\r\n}\r\n\r\nfunction filter(el, filters) {\r\n    return filters.every(({name, value}) => pseudos[name](el, value));\r\n}\r\n\r\nfunction tokenize(selector) {\r\n    return parse(selector).map((tokens) => {\r\n        return tokens.map((token) => {\r\n            if (typeof token === 'string') {\r\n                return token;\r\n            }\r\n            const selector = [];\r\n            const filters = [];\r\n            if (token.nodeName) {\r\n                selector.push(token.nodeName);\r\n            }\r\n            token.attributes.forEach(({name, value, operator, ignoreCase}) => {\r\n                if (name === 'id') {\r\n                    selector.push('#', value);\r\n                } else if (name === 'class') {\r\n                    selector.push('.', value);\r\n                } else {\r\n                    selector.push('[', name);\r\n                    if (operator !== '') {\r\n                        selector.push(operator, '\"', value, '\"');\r\n                        if (ignoreCase) {\r\n                            selector.push(' i');\r\n                        }\r\n                    }\r\n                    selector.push(']');\r\n                }\r\n            });\r\n            token.pseudos.forEach(({name, value}) => {\r\n                if (name in pseudos) {\r\n                    filters.push({name, value});\r\n                } else {\r\n                    selector.push(':', name);\r\n                    if (value !== '') {\r\n                        selector.push('(', value, ')');\r\n                    }\r\n                }\r\n            });\r\n            return {\r\n                filters,\r\n                selector: selector.length === 0 ? '*' : selector.join('')\r\n            };\r\n        });\r\n    });\r\n}\r\n\r\nexport function is(el, selector) {\r\n    const token = tokenize(selector)[0][0];\r\n    return matches(el, token.selector) && filter(el, token.filters);\r\n}\r\n\r\nexport function find(selector, root) {\r\n    return query(selector, root)[0] || null;\r\n}\r\n\r\nexport function query(selector, root = doc) {\r\n    if (typeof root === 'string') {\r\n        root = find(root);\r\n    }\r\n    root = [root];\r\n    return tokenize(selector).reduce((results, tokens) => {\r\n        let context = root;\r\n        let i = 0;\r\n        const len = tokens.length;\r\n        while (i < len) {\r\n            let token = tokens[i++], combinator = combinators[' '];\r\n            if (token in combinators) {\r\n                combinator = combinators[token];\r\n                token = tokens[i++];\r\n            }\r\n            context = context.reduce((nodes, el) => combinator(el, token, nodes), []);\r\n        }\r\n        context.forEach((el) => {\r\n            if (!results.includes(el)) {\r\n                results.push(el);\r\n            }\r\n        });\r\n        return results;\r\n    }, []).sort((a, b) => 3 - (a.compareDocumentPosition(b) & 6));\r\n}\r\n"]}